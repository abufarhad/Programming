
#define M 100000002
int marked[M/64 + 2];
int pri[5761455];

#define on(x) (marked[x/64] & (1<<((x%64)/2)))
#define mark(x)  marked[x/64] |= (1<<((x%64)/2))
#define isPrime(num) (num > 1 && (num == 2 || ((num & 1) && !on(num))))

void sieve(int n) 
{
  for (int i = 3; i * i < n; i += 2) {
    if (!on(i)) 
    {
      for (int j = i * i; j <= n; j += i + i)  mark(j);
    }
  }
}

==============================Or================================
#define mx 100000000
vector<ll> primes;

bool Check(ll N, ll pos) { return (bool)(N & (1<<pos)); }
ll Set(ll N,ll pos) { return N= N | (1<<pos); }

ll status[(mx/32)+2];

void BitSeive()
{
    ll i, j, sqrtN;
    sqrtN = ( sqrt( mx ) );
    for( i = 3; i <= sqrtN; i += 2 )
    {
        if( Check(status[i>>5],i&31)==0)
        {
            for( j = i*i; j <= mx; j += (i<<1) )
            {
                status[j>>5]=Set(status[j>>5],j & 31)   ;
            }
        }
    }
    primes.pb(2);
    for(i=3; i<=mx; i+=2) if( Check(status[i>>5],i&31)==0)  primes.pb(i)  ;
}