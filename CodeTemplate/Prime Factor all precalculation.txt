
bool prime[M];
ll p[M],ans[M];

void sieve()
{
    ll k=0;
    prime[0]=prime[1]=1;
    for(ll i=4; i<=M; i+=2) prime[i]=1;
    for(ll i=3; i<=sqrt(M); i+=2) if(i<=sqrt(M) && !prime[i] )for(ll j=i*i; j<=M; j+=2*i) prime[j]=1;
    for(ll i=0; i<=M; i++) if(prime[i]==0)  p[k]=i,k++;
}

void pre_calc()
{
    sieve();
    //fr(i,20)cout<<p[i]<<" ";
   // cout<<endl;
    ans[1]=0;
    for(ll i=2; i<=M; i++)
    {
        // Thjis line for to store previous number of prime factor (for calculating factorials factor)
        //ans[i]=ans[i-1];

        ll n=i, j=0;
        while( prime[n])    ///until n not a prime
        {
            if(n%p[j]==0)
            {
                ans[i]++;
                n/=p[j];
            }
            else     j++;
        }
        if( !prime[n])  ans[i]++;  ///if prime then increase size
        //cout<<i<<" "<<ans[i]<<endl;
    }
}